from app.api.quality_matrix.models import ColumnOutput


def transpose(data: list[ColumnOutput]) -> list[ColumnOutput]:
    rows = [entry.metadatum for entry in data]
    columns = list(data[0].columns.keys())
    output = []
    for column in columns:
        new_columns = {}
        for row in rows:
            entry = list(filter(lambda line: line.metadatum == row, data))
            if len(entry) == 1:
                new_columns.update({row: entry[0].columns[column]})

        new_row = ColumnOutput(
            metadatum=column, columns=new_columns, level=data[0].level
        )
        output.append(new_row)
    return output


def default_properties() -> list[str]:
    return [
        "add_to_stream_description",
        "add_to_stream_priority",
        "add_to_stream_title",
        "cclom:aggregationlevel",
        "cclom:classification_keyword",
        "cclom:duration",
        "cclom:format",
        "cclom:general_description",
        "cclom:general_keyword",
        "cclom:general_language",
        "cclom:location",
        "cclom:size",
        "cclom:status",
        "cclom:title",
        "cclom:typicallearningtime",
        "ccm:accessibilitySummary",
        "ccm:author_freetext",
        "ccm:classification_purpose",
        "ccm:collection_ordered_position",
        "ccm:collection_proposal_status",
        "ccm:collectionshorttitle",
        "ccm:commonlicense_key",
        "ccm:competence",
        "ccm:conditionsOfAccess",
        "ccm:containsAdvertisement",
        "ccm:curriculum",
        "ccm:custom_license",
        "ccm:dataProtectionConformity",
        "ccm:editorial_checklist",
        "ccm:editorial_state",
        "ccm:educationalcontext",
        "ccm:educationaldifficulty",
        "ccm:educationalintendedenduserrole",
        "ccm:educationalinteractivitytype",
        "ccm:educationallearningresourcetype",
        "ccm:educationaltypicalagerange",
        "ccm:fskRating",
        "ccm:general_identifier",
        "ccm:imported_object_appname",
        "ccm:license_oer",
        "ccm:license_to",
        "ccm:lifecyclecontributer_author",
        "ccm:lifecyclecontributer_content_provider",
        "ccm:lifecyclecontributer_editor",
        "ccm:lifecyclecontributer_educational_validator",
        "ccm:lifecyclecontributer_graphical_designer",
        "ccm:lifecyclecontributer_initiator",
        "ccm:lifecyclecontributer_instructional_designer",
        "ccm:lifecyclecontributer_publisher",
        "ccm:lifecyclecontributer_script_writer",
        "ccm:lifecyclecontributer_subject_matter_expert",
        "ccm:lifecyclecontributer_technical_implementer",
        "ccm:lifecyclecontributer_terminator",
        "ccm:lifecyclecontributer_unknown",
        "ccm:lifecyclecontributer_validator",
        "ccm:metadatacontributer_creator",
        "ccm:metadatacontributer_provider",
        "ccm:metadatacontributer_validator",
        "ccm:notes",
        "ccm:objecttype",
        "ccm:oeh_accessibility_find",
        "ccm:oeh_accessibility_open",
        "ccm:oeh_accessibility_security",
        "ccm:oeh_buffet_criteria",
        "ccm:oeh_competence_check",
        "ccm:oeh_competence_requirements",
        "ccm:oeh_digitalCompetencies",
        "ccm:oeh_internalDocument",
        "ccm:oeh_interoperability",
        "ccm:oeh_languageLevel",
        "ccm:oeh_languageTarget",
        "ccm:oeh_lrt",
        "ccm:oeh_lrt_aggregated",
        "ccm:oeh_quality_copyright_law",
        "ccm:oeh_quality_correctness",
        "ccm:oeh_quality_criminal_law",
        "ccm:oeh_quality_currentness",
        "ccm:oeh_quality_data_privacy",
        "ccm:oeh_quality_didactics",
        "ccm:oeh_quality_language",
        "ccm:oeh_quality_login",
        "ccm:oeh_quality_medial",
        "ccm:oeh_quality_neutralness",
        "ccm:oeh_quality_personal_law",
        "ccm:oeh_quality_protection_of_minors",
        "ccm:oeh_quality_relevancy_for_education",
        "ccm:oeh_quality_transparentness",
        "ccm:oeh_signatures",
        "ccm:oeh_usability",
        "ccm:oeh_widgets",
        "ccm:pointsdefault",
        "ccm:price",
        "ccm:published_date",
        "ccm:published_handle_id",
        "ccm:replicationsource",
        "ccm:restricted_access",
        "ccm:sourceContentType",
        "ccm:taxonid",
        "ccm:toolCategory",
        "ccm:tool_category",
        "ccm:tool_instance_access",
        "ccm:tool_instance_key",
        "ccm:tool_instance_license",
        "ccm:tool_instance_params",
        "ccm:tool_instance_provider",
        "ccm:tool_instance_provider_url",
        "ccm:tool_instance_secret",
        "ccm:tool_instance_support_contact",
        "ccm:tool_instance_support_mail",
        "ccm:tool_producer",
        "ccm:unmetLegalCriteria",
        "ccm:wwwurl",
        "cm:created",
        "cm:description",
        "cm:modified",
        "cm:name",
        "cm:title",
        "cm:versionLabel",
        "collection_feedback",
        "feedback_comment",
        "feedback_rating",
        "license",
        "sys:node-uuid",
        "virtual:author",
        "virtual:collection_id",
        "virtual:collection_id_primary",
        "virtual:data_privacy",
        "virtual:editorial_edit_type",
        "virtual:editorial_exclusion",
        "virtual:editorial_file_type",
        "virtual:editorial_filter",
        "virtual:editorial_publisher",
        "virtual:editorial_replicationsource",
        "virtual:editorial_status",
        "virtual:editorial_taxonid",
        "virtual:editorial_title",
        "virtual:email",
        "virtual:mediatype",
        "virtual:newsletter",
        "virtual:portal_type",
        "virtual:publish_location",
        "virtual:search_tasks",
        "virtual:time_after_created",
        "virtual:time_after_modified",
        "virtual:type",
    ]
