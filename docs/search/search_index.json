{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Project Repositories Initial deployment Clone the main repository to the production machine when setting up the application. All services are deployed from Docker images -- either custom images build from the two other repositories or 3rd-party images. main repository Defines the service architecture in docker-compose.yml . Contains the project documentation you are currently reading. fastapi repository Defines the REST API and the background jobs. dbt repository Defines the analytics service. Exposes an RPC server. Background Tasks import documents from elastic to postgres, start analytics runs in the analytics service via RPC, read from spellcheck_queue table in postgres, submit items to spellceck service and store spellcheck errors in postgres. See FastAPI -> Background Tasks for further details. Open Issues Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque","title":"Overview"},{"location":"#overview","text":"","title":"Overview"},{"location":"#project-repositories","text":"Initial deployment Clone the main repository to the production machine when setting up the application. All services are deployed from Docker images -- either custom images build from the two other repositories or 3rd-party images. main repository Defines the service architecture in docker-compose.yml . Contains the project documentation you are currently reading. fastapi repository Defines the REST API and the background jobs. dbt repository Defines the analytics service. Exposes an RPC server.","title":"Project Repositories"},{"location":"#background-tasks","text":"import documents from elastic to postgres, start analytics runs in the analytics service via RPC, read from spellcheck_queue table in postgres, submit items to spellceck service and store spellcheck errors in postgres. See FastAPI -> Background Tasks for further details.","title":"Background Tasks"},{"location":"#open-issues","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque","title":"Open Issues"},{"location":"backup/","text":"Data Backup Backup Postgres Data","title":"Data Backup"},{"location":"backup/#data-backup","text":"","title":"Data Backup"},{"location":"backup/#backup-postgres-data","text":"","title":"Backup Postgres Data"},{"location":"dashboard/","text":"Dashboard Warning Do not forget to backup the Superset database. Otherwise, changes to existing visualizations and dashboards are changed or new ones are added Setup docker-compose up -d superset docker-compose exec superset superset db upgrade docker-compose exec superset superset fab create-admin \\ --username admin \\ --firstname Superset \\ --lastname Admin \\ --email admin@superset.com \\ --password admin docker-compose exec superset superset init Data Backup Recovery","title":"Dashboard"},{"location":"dashboard/#dashboard","text":"Warning Do not forget to backup the Superset database. Otherwise, changes to existing visualizations and dashboards are changed or new ones are added","title":"Dashboard"},{"location":"dashboard/#setup","text":"docker-compose up -d superset docker-compose exec superset superset db upgrade docker-compose exec superset superset fab create-admin \\ --username admin \\ --firstname Superset \\ --lastname Admin \\ --email admin@superset.com \\ --password admin docker-compose exec superset superset init","title":"Setup"},{"location":"dashboard/#data-backup","text":"","title":"Data Backup"},{"location":"dashboard/#recovery","text":"","title":"Recovery"},{"location":"info/","text":"Macros Plugin Environment General List All available variables and filters within the macros plugin: Variable Type Content extra dict mermaid_box_bg = 'var(--md-footer-bg-color--dark)' config Config config_file_path = '/docs/mkdocs.yml', site_name = 'MetaQS Documentation', nav [ NoneType ], pages [ NoneType ], site_url = '', site_description [ NoneType ], site_author [ NoneType ], theme [ Theme ], docs_dir = '/docs/docs', site_dir = '/docs/site', copyright [ NoneType ], google_analytics [ NoneType ], dev_addr [ Address ], use_directory_urls = True, repo_url = '', repo_name = '', edit_uri = '', extra_css = ['assets/_mkdocstrings.css'], extra_javascript = ['https://unpkg.com/mermaid/dist/mermaid.min.js'], extra_templates = [], markdown_extensions = ['toc', 'tables', 'fenced_code', 'admonition', 'attr_list', 'def_list', 'pymdownx.tasklist', 'pymdownx.snippets', 'pymdownx.highlight', 'pymdownx.inlinehilite', 'pymdownx.superfences', , ], mdx_configs [ dict ], strict = False, remote_branch = 'gh-pages', remote_name = 'origin', extra [ SubConfig ], plugins [ PluginCollection ] environment dict system = 'Linux', system_version = '5.4.0-90-generic', python_version = '3.9.2', mkdocs_version = '1.2.3', macros_plugin_version = '0.6.3', jinja2_version = '3.0.3' plugin Config module_name = 'main', modules = [], include_dir = '', include_yaml = [], j2_block_start_string = '', j2_block_end_string = '', j2_variable_start_string = '', j2_variable_end_string = '', verbose = False git dict status = False, date [ NoneType ], short_commit = '', commit = '', author = '', tag = '', date_ISO = '', message = '', raw = '', root_dir = '' mermaid_box_bg str 'var(--md-footer-bg-color--dark)' macros SuperDict context [ function ], macros_info [ function ], now [ function ], fix_url [ function ] filters dict pretty [ function ] filters_builtin dict abs [ builtin_function_or_method ], attr [ function ], batch [ function ], capitalize [ function ], center [ function ], count [ builtin_function_or_method ], d [ function ], default [ function ], dictsort [ function ], e [ builtin_function_or_method ], escape [ builtin_function_or_method ], filesizeformat [ function ], first [ function ], float [ function ], forceescape [ function ], format [ function ], groupby [ function ], indent [ function ], int [ function ], join [ function ], last [ function ], length [ builtin_function_or_method ], list [ function ], lower [ function ], map [ function ], min [ function ], max [ function ], pprint [ function ], random [ function ], reject [ function ], rejectattr [ function ], replace [ function ], reverse [ function ], round [ function ], safe [ function ], select [ function ], selectattr [ function ], slice [ function ], sort [ function ], string [ builtin_function_or_method ], striptags [ function ], sum [ function ], title [ function ], trim [ function ], truncate [ function ], unique [ function ], upper [ function ], urlencode [ function ], urlize [ function ], wordcount [ function ], wordwrap [ function ], xmlattr [ function ], tojson [ function ] navigation Navigation Page(title='Overview', url='.') Page(title=[blank], url='services/') Page(title=[blank], url='setup/') Page(title=[blank], url='operations/') Page(title='Data Backup', url='backup/') Page(title=[blank], url='recovery/') Section(title='FastAPI') Page(title=[blank], url='fastapi/') Page(title=[blank], url='fastapi/background_tasks/') Section(title='Analytics') Page(title=[blank], url='analytics/') Page(title=[blank], url='analytics/data_import/') Page(title=[blank], url='analytics/sql_processing/') Page(title=[blank], url='analytics/spellcheck_processing/') Page(title='Dashboard', url='dashboard/') Page(title='Info', url='info/') files Files page Page Page(title='Info', url='info/') Config Information Standard MkDocs configuration information. Do not try to modify. e.g. {{ config.docs_dir }} See also the MkDocs documentation on the config object . Variable Type Content config_file_path str '/docs/mkdocs.yml' site_name str 'MetaQS Documentation' nav NoneType None pages NoneType None site_url str '' site_description NoneType None site_author NoneType None theme Theme Theme(name='material', dirs=['/usr/local/lib/python3.9/site-packages/material', '/usr/local/lib/python3.9/site-packages/mkdocs/templates'], static_templates=['404.html', 'sitemap.xml'], locale=Locale(language='en', territory=''), language='en', direction=None, features=[], palette={'scheme': 'slate', 'primary': 'cyan'}, font={'text': 'Roboto', 'code': 'Roboto Mono'}, icon=None, favicon='assets/images/favicon.png', include_search_page=False, search_index_only=True) docs_dir str '/docs/docs' site_dir str '/docs/site' copyright NoneType None google_analytics NoneType None dev_addr Address Address(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str '' repo_name str '' edit_uri str '' extra_css list ['assets/_mkdocstrings.css'] extra_javascript list ['https://unpkg.com/mermaid/dist/mermaid.min.js'] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'admonition', 'attr_list', 'def_list', 'pymdownx.tasklist', 'pymdownx.snippets', 'pymdownx.highlight', 'pymdownx.inlinehilite', 'pymdownx.superfences', , ] mdx_configs dict pymdownx.tasklist [ dict ], pymdownx.superfences [ dict ] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra SubConfig {'mermaid_box_bg': 'var(--md-footer-bg-color--dark)'} plugins PluginCollection search [ SearchPlugin ], mkdocstrings [ MkdocstringsPlugin ], awesome-pages [ AwesomePagesPlugin ], macros [ MacrosPlugin ], mermaid2 [ MarkdownMermaidPlugin ], autorefs [ AutorefsPlugin ] Macros These macros have been defined programmatically for this environment (module or pluglets). Variable Type Content context function ( obj, e ) Default mkdocs_macro List the defined variables macros_info function ( ) Test/debug function: list useful documentation on the mkdocs_macro environment. now function ( ) Get the current time (returns a datetime object). Used alone, it provides a timestamp. To get the year use now().year , for the month number now().month , etc. fix_url function ( url, r ) If url is relative, fix it so that it points to the docs diretory. This is necessary because relative links in markdown must be adapted in html ('img/foo.png' => '../img/img.png'). Git Information Information available on the last commit and the git repository containing the documentation project: e.g. {{ git.message }} Variable Type Content status bool False date NoneType None short_commit str '' commit str '' author str '' tag str '' date_ISO str '' message str '' raw str '' root_dir str '' Page Attributes Provided by MkDocs. These attributes change for every page (the attributes shown are for this page). e.g. {{ page.title }} See also the MkDocs documentation on the page object . Variable Type Content file File page [ Page ], src_path = 'info.md', abs_src_path = '/docs/docs/info.md', name = 'info', dest_path = 'info/index.html', abs_dest_path = '/docs/site/info/index.html', url = 'info/' title str 'Info' parent NoneType None children NoneType None previous_page Page Page(title='Dashboard', url='dashboard/') next_page NoneType None _Page__active bool False is_section bool False is_page bool True is_link bool False update_date str '2021-11-30' canonical_url NoneType None abs_url NoneType None edit_url NoneType None markdown str '{{ macros_info() }}' content NoneType None toc list [] meta dict To have all titles of all pages, use: {% for page in navigation.pages %} - {{ page.title }} {% endfor% } Plugin Filters These filters are provided as a standard by the macros plugin. Variable Type Content pretty function ( var_list, rows, header, e ) Default mkdocs_macro Prettify a dictionary or object (used for environment documentation, or debugging). Builtin Jinja2 Filters These filters are provided by Jinja2 as a standard. See also the Jinja2 documentation on builtin filters ). Variable Type Content abs builtin_function_or_method Return the absolute value of the argument. attr function ( environment, obj, name, value ) Get an attribute of an object. foo|attr(\"bar\") works like foo.bar just that always an attribute is returned and items are not looked up. batch function ( value, linecount, fill_with, tmp, item ) A filter that batches items. It works pretty much like slice just the other way round. It returns a list of lists with the given number of items. If you provide a second parameter this is used to fill up missing items. See this example. capitalize function ( s ) Capitalize a value. The first character will be uppercase, all others lowercase. center function ( value, width ) Centers the value in a field of a given width. count builtin_function_or_method Return the number of items in a container. d function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. default function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. dictsort function ( value, case_sensitive, by, reverse, sort_func ) Sort a dict and yield (key, value) pairs. Python dicts may not be in the order you want to display them in, so sort them first. e builtin_function_or_method Replace the characters & , < , > , ' , and \" in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML. escape builtin_function_or_method Replace the characters & , < , > , ' , and \" in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML. filesizeformat function ( value, binary, bytes, base, prefixes, i, prefix, unit ) Format the value like a 'human-readable' file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc). Per default decimal prefixes are used (Mega, Giga, etc.), if the second parameter is set to True the binary prefixes are used (Mebi, Gibi). first function ( args, kwargs, b ) Return the first item of a sequence. float function ( value, default ) Convert the value into a floating point number. If the conversion doesn't work it will return 0.0 . You can override this default using the first parameter. forceescape function ( value ) Enforce HTML escaping. This will probably double escape variables. format function ( value, args, kwargs ) Apply the given values to a printf-style _ format string, like string % values . groupby function ( args, kwargs, b ) Group a sequence of objects by an attribute using Python's :func: itertools.groupby . The attribute can use dot notation for nested access, like \"address.city\" . Unlike Python's groupby , the values are sorted first so only one group is returned for each unique value. indent function ( s, width, first, blank, newline, rv, lines ) Return a copy of the string with each line indented by 4 spaces. The first line and blank lines are not indented by default. int function ( value, default, base ) Convert the value into an integer. If the conversion doesn't work it will return 0 . You can override this default using the first parameter. You can also override the default base (10) in the second parameter, which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively. The base is ignored for decimal numbers and non-string values. join function ( args, kwargs, b ) Return a string which is the concatenation of the strings in the sequence. The separator between elements is an empty string per default, you can define it with the optional parameter. last function ( environment, seq ) Return the last item of a sequence. length builtin_function_or_method Return the number of items in a container. list function ( args, kwargs, b ) Convert the value into a list. If it was a string the returned list will be a list of characters. lower function ( s ) Convert a value to lowercase. map function ( args, kwargs, b ) Applies a filter on a sequence of objects or looks up an attribute. This is useful when dealing with lists of objects but you are really only interested in a certain value of it. min function ( environment, value, case_sensitive, attribute ) Return the smallest item from the sequence. max function ( environment, value, case_sensitive, attribute ) Return the largest item from the sequence. pprint function ( value ) Pretty print a variable. Useful for debugging. random function ( context, seq ) Return a random item from the sequence. reject function ( args, kwargs, b ) Filters a sequence of objects by applying a test to each object, and rejecting the objects with the test succeeding. rejectattr function ( args, kwargs, b ) Filters a sequence of objects by applying a test to the specified attribute of each object, and rejecting the objects with the test succeeding. replace function ( eval_ctx, s, old, new, count ) Return a copy of the value with all occurrences of a substring replaced with a new one. The first argument is the substring that should be replaced, the second is the replacement string. If the optional third argument count is given, only the first count occurrences are replaced. reverse function ( value, rv, e ) Reverse the object or return an iterator that iterates over it the other way round. round function ( value, precision, method, func ) Round the number to a given precision. The first parameter specifies the precision (default is 0 ), the second the rounding method. safe function ( value ) Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped. select function ( args, kwargs, b ) Filters a sequence of objects by applying a test to each object, and only selecting the objects with the test succeeding. selectattr function ( args, kwargs, b ) Filters a sequence of objects by applying a test to the specified attribute of each object, and only selecting the objects with the test succeeding. slice function ( args, kwargs, b ) Slice an iterator and return a list of lists containing those items. Useful if you want to create a div containing three ul tags that represent columns. sort function ( environment, value, reverse, case_sensitive, attribute, key_func ) Sort an iterable using Python's :func: sorted . string builtin_function_or_method Convert an object to a string if it isn't already. This preserves a :class: Markup string rather than converting it back to a basic string, so it will still be marked as safe and won't be escaped again. striptags function ( value ) Strip SGML/XML tags and replace adjacent whitespace by one space. sum function ( args, kwargs, b ) Returns the sum of a sequence of numbers plus the value of parameter 'start' (which defaults to 0). When the sequence is empty it returns start. title function ( s ) Return a titlecased version of the value. I.e. words will start with uppercase letters, all remaining characters are lowercase. trim function ( value, chars ) Strip leading and trailing characters, by default whitespace. truncate function ( env, s, length, killwords, end, leeway, result ) Return a truncated copy of the string. The length is specified with the first parameter which defaults to 255 . If the second parameter is true the filter will cut the text at length. Otherwise it will discard the last word. If the text was in fact truncated it will append an ellipsis sign ( \"...\" ). If you want a different ellipsis sign than \"...\" you can specify it using the third parameter. Strings that only exceed the length by the tolerance margin given in the fourth parameter will not be truncated. unique function ( environment, value, case_sensitive, attribute, getter, seen, item, key ) Returns a list of unique items from the given iterable. upper function ( s ) Convert a value to uppercase. urlencode function ( value, items ) Quote data for use in a URL path or query using UTF-8. urlize function ( eval_ctx, value, trim_url_limit, nofollow, target, rel, extra_schemes, policies, rel_parts, scheme, rv ) Convert URLs in text into clickable links. wordcount function ( s ) Count the words in that string. wordwrap function ( environment, s, width, break_long_words, wrapstring, break_on_hyphens ) Wrap a string to the given width. Existing newlines are treated as paragraphs to be wrapped separately. xmlattr function ( eval_ctx, d, autospace, rv ) Create an SGML/XML attribute string based on the items in a dict. All values that are neither none nor undefined are automatically escaped. tojson function ( eval_ctx, value, indent, policies, dumps, kwargs ) Serialize an object to a string of JSON, and mark it safe to render in HTML. This filter is only for use in HTML documents.","title":"Info"},{"location":"info/#macros-plugin-environment","text":"","title":"Macros Plugin Environment"},{"location":"info/#general-list","text":"All available variables and filters within the macros plugin: Variable Type Content extra dict mermaid_box_bg = 'var(--md-footer-bg-color--dark)' config Config config_file_path = '/docs/mkdocs.yml', site_name = 'MetaQS Documentation', nav [ NoneType ], pages [ NoneType ], site_url = '', site_description [ NoneType ], site_author [ NoneType ], theme [ Theme ], docs_dir = '/docs/docs', site_dir = '/docs/site', copyright [ NoneType ], google_analytics [ NoneType ], dev_addr [ Address ], use_directory_urls = True, repo_url = '', repo_name = '', edit_uri = '', extra_css = ['assets/_mkdocstrings.css'], extra_javascript = ['https://unpkg.com/mermaid/dist/mermaid.min.js'], extra_templates = [], markdown_extensions = ['toc', 'tables', 'fenced_code', 'admonition', 'attr_list', 'def_list', 'pymdownx.tasklist', 'pymdownx.snippets', 'pymdownx.highlight', 'pymdownx.inlinehilite', 'pymdownx.superfences', , ], mdx_configs [ dict ], strict = False, remote_branch = 'gh-pages', remote_name = 'origin', extra [ SubConfig ], plugins [ PluginCollection ] environment dict system = 'Linux', system_version = '5.4.0-90-generic', python_version = '3.9.2', mkdocs_version = '1.2.3', macros_plugin_version = '0.6.3', jinja2_version = '3.0.3' plugin Config module_name = 'main', modules = [], include_dir = '', include_yaml = [], j2_block_start_string = '', j2_block_end_string = '', j2_variable_start_string = '', j2_variable_end_string = '', verbose = False git dict status = False, date [ NoneType ], short_commit = '', commit = '', author = '', tag = '', date_ISO = '', message = '', raw = '', root_dir = '' mermaid_box_bg str 'var(--md-footer-bg-color--dark)' macros SuperDict context [ function ], macros_info [ function ], now [ function ], fix_url [ function ] filters dict pretty [ function ] filters_builtin dict abs [ builtin_function_or_method ], attr [ function ], batch [ function ], capitalize [ function ], center [ function ], count [ builtin_function_or_method ], d [ function ], default [ function ], dictsort [ function ], e [ builtin_function_or_method ], escape [ builtin_function_or_method ], filesizeformat [ function ], first [ function ], float [ function ], forceescape [ function ], format [ function ], groupby [ function ], indent [ function ], int [ function ], join [ function ], last [ function ], length [ builtin_function_or_method ], list [ function ], lower [ function ], map [ function ], min [ function ], max [ function ], pprint [ function ], random [ function ], reject [ function ], rejectattr [ function ], replace [ function ], reverse [ function ], round [ function ], safe [ function ], select [ function ], selectattr [ function ], slice [ function ], sort [ function ], string [ builtin_function_or_method ], striptags [ function ], sum [ function ], title [ function ], trim [ function ], truncate [ function ], unique [ function ], upper [ function ], urlencode [ function ], urlize [ function ], wordcount [ function ], wordwrap [ function ], xmlattr [ function ], tojson [ function ] navigation Navigation Page(title='Overview', url='.') Page(title=[blank], url='services/') Page(title=[blank], url='setup/') Page(title=[blank], url='operations/') Page(title='Data Backup', url='backup/') Page(title=[blank], url='recovery/') Section(title='FastAPI') Page(title=[blank], url='fastapi/') Page(title=[blank], url='fastapi/background_tasks/') Section(title='Analytics') Page(title=[blank], url='analytics/') Page(title=[blank], url='analytics/data_import/') Page(title=[blank], url='analytics/sql_processing/') Page(title=[blank], url='analytics/spellcheck_processing/') Page(title='Dashboard', url='dashboard/') Page(title='Info', url='info/') files Files page Page Page(title='Info', url='info/')","title":"General List"},{"location":"info/#config-information","text":"Standard MkDocs configuration information. Do not try to modify. e.g. {{ config.docs_dir }} See also the MkDocs documentation on the config object . Variable Type Content config_file_path str '/docs/mkdocs.yml' site_name str 'MetaQS Documentation' nav NoneType None pages NoneType None site_url str '' site_description NoneType None site_author NoneType None theme Theme Theme(name='material', dirs=['/usr/local/lib/python3.9/site-packages/material', '/usr/local/lib/python3.9/site-packages/mkdocs/templates'], static_templates=['404.html', 'sitemap.xml'], locale=Locale(language='en', territory=''), language='en', direction=None, features=[], palette={'scheme': 'slate', 'primary': 'cyan'}, font={'text': 'Roboto', 'code': 'Roboto Mono'}, icon=None, favicon='assets/images/favicon.png', include_search_page=False, search_index_only=True) docs_dir str '/docs/docs' site_dir str '/docs/site' copyright NoneType None google_analytics NoneType None dev_addr Address Address(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str '' repo_name str '' edit_uri str '' extra_css list ['assets/_mkdocstrings.css'] extra_javascript list ['https://unpkg.com/mermaid/dist/mermaid.min.js'] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'admonition', 'attr_list', 'def_list', 'pymdownx.tasklist', 'pymdownx.snippets', 'pymdownx.highlight', 'pymdownx.inlinehilite', 'pymdownx.superfences', , ] mdx_configs dict pymdownx.tasklist [ dict ], pymdownx.superfences [ dict ] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra SubConfig {'mermaid_box_bg': 'var(--md-footer-bg-color--dark)'} plugins PluginCollection search [ SearchPlugin ], mkdocstrings [ MkdocstringsPlugin ], awesome-pages [ AwesomePagesPlugin ], macros [ MacrosPlugin ], mermaid2 [ MarkdownMermaidPlugin ], autorefs [ AutorefsPlugin ]","title":"Config Information"},{"location":"info/#macros","text":"These macros have been defined programmatically for this environment (module or pluglets). Variable Type Content context function ( obj, e ) Default mkdocs_macro List the defined variables macros_info function ( ) Test/debug function: list useful documentation on the mkdocs_macro environment. now function ( ) Get the current time (returns a datetime object). Used alone, it provides a timestamp. To get the year use now().year , for the month number now().month , etc. fix_url function ( url, r ) If url is relative, fix it so that it points to the docs diretory. This is necessary because relative links in markdown must be adapted in html ('img/foo.png' => '../img/img.png').","title":"Macros"},{"location":"info/#git-information","text":"Information available on the last commit and the git repository containing the documentation project: e.g. {{ git.message }} Variable Type Content status bool False date NoneType None short_commit str '' commit str '' author str '' tag str '' date_ISO str '' message str '' raw str '' root_dir str ''","title":"Git Information"},{"location":"info/#page-attributes","text":"Provided by MkDocs. These attributes change for every page (the attributes shown are for this page). e.g. {{ page.title }} See also the MkDocs documentation on the page object . Variable Type Content file File page [ Page ], src_path = 'info.md', abs_src_path = '/docs/docs/info.md', name = 'info', dest_path = 'info/index.html', abs_dest_path = '/docs/site/info/index.html', url = 'info/' title str 'Info' parent NoneType None children NoneType None previous_page Page Page(title='Dashboard', url='dashboard/') next_page NoneType None _Page__active bool False is_section bool False is_page bool True is_link bool False update_date str '2021-11-30' canonical_url NoneType None abs_url NoneType None edit_url NoneType None markdown str '{{ macros_info() }}' content NoneType None toc list [] meta dict To have all titles of all pages, use: {% for page in navigation.pages %} - {{ page.title }} {% endfor% }","title":"Page Attributes"},{"location":"info/#plugin-filters","text":"These filters are provided as a standard by the macros plugin. Variable Type Content pretty function ( var_list, rows, header, e ) Default mkdocs_macro Prettify a dictionary or object (used for environment documentation, or debugging).","title":"Plugin Filters"},{"location":"info/#builtin-jinja2-filters","text":"These filters are provided by Jinja2 as a standard. See also the Jinja2 documentation on builtin filters ). Variable Type Content abs builtin_function_or_method Return the absolute value of the argument. attr function ( environment, obj, name, value ) Get an attribute of an object. foo|attr(\"bar\") works like foo.bar just that always an attribute is returned and items are not looked up. batch function ( value, linecount, fill_with, tmp, item ) A filter that batches items. It works pretty much like slice just the other way round. It returns a list of lists with the given number of items. If you provide a second parameter this is used to fill up missing items. See this example. capitalize function ( s ) Capitalize a value. The first character will be uppercase, all others lowercase. center function ( value, width ) Centers the value in a field of a given width. count builtin_function_or_method Return the number of items in a container. d function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. default function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. dictsort function ( value, case_sensitive, by, reverse, sort_func ) Sort a dict and yield (key, value) pairs. Python dicts may not be in the order you want to display them in, so sort them first. e builtin_function_or_method Replace the characters & , < , > , ' , and \" in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML. escape builtin_function_or_method Replace the characters & , < , > , ' , and \" in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML. filesizeformat function ( value, binary, bytes, base, prefixes, i, prefix, unit ) Format the value like a 'human-readable' file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc). Per default decimal prefixes are used (Mega, Giga, etc.), if the second parameter is set to True the binary prefixes are used (Mebi, Gibi). first function ( args, kwargs, b ) Return the first item of a sequence. float function ( value, default ) Convert the value into a floating point number. If the conversion doesn't work it will return 0.0 . You can override this default using the first parameter. forceescape function ( value ) Enforce HTML escaping. This will probably double escape variables. format function ( value, args, kwargs ) Apply the given values to a printf-style _ format string, like string % values . groupby function ( args, kwargs, b ) Group a sequence of objects by an attribute using Python's :func: itertools.groupby . The attribute can use dot notation for nested access, like \"address.city\" . Unlike Python's groupby , the values are sorted first so only one group is returned for each unique value. indent function ( s, width, first, blank, newline, rv, lines ) Return a copy of the string with each line indented by 4 spaces. The first line and blank lines are not indented by default. int function ( value, default, base ) Convert the value into an integer. If the conversion doesn't work it will return 0 . You can override this default using the first parameter. You can also override the default base (10) in the second parameter, which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively. The base is ignored for decimal numbers and non-string values. join function ( args, kwargs, b ) Return a string which is the concatenation of the strings in the sequence. The separator between elements is an empty string per default, you can define it with the optional parameter. last function ( environment, seq ) Return the last item of a sequence. length builtin_function_or_method Return the number of items in a container. list function ( args, kwargs, b ) Convert the value into a list. If it was a string the returned list will be a list of characters. lower function ( s ) Convert a value to lowercase. map function ( args, kwargs, b ) Applies a filter on a sequence of objects or looks up an attribute. This is useful when dealing with lists of objects but you are really only interested in a certain value of it. min function ( environment, value, case_sensitive, attribute ) Return the smallest item from the sequence. max function ( environment, value, case_sensitive, attribute ) Return the largest item from the sequence. pprint function ( value ) Pretty print a variable. Useful for debugging. random function ( context, seq ) Return a random item from the sequence. reject function ( args, kwargs, b ) Filters a sequence of objects by applying a test to each object, and rejecting the objects with the test succeeding. rejectattr function ( args, kwargs, b ) Filters a sequence of objects by applying a test to the specified attribute of each object, and rejecting the objects with the test succeeding. replace function ( eval_ctx, s, old, new, count ) Return a copy of the value with all occurrences of a substring replaced with a new one. The first argument is the substring that should be replaced, the second is the replacement string. If the optional third argument count is given, only the first count occurrences are replaced. reverse function ( value, rv, e ) Reverse the object or return an iterator that iterates over it the other way round. round function ( value, precision, method, func ) Round the number to a given precision. The first parameter specifies the precision (default is 0 ), the second the rounding method. safe function ( value ) Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped. select function ( args, kwargs, b ) Filters a sequence of objects by applying a test to each object, and only selecting the objects with the test succeeding. selectattr function ( args, kwargs, b ) Filters a sequence of objects by applying a test to the specified attribute of each object, and only selecting the objects with the test succeeding. slice function ( args, kwargs, b ) Slice an iterator and return a list of lists containing those items. Useful if you want to create a div containing three ul tags that represent columns. sort function ( environment, value, reverse, case_sensitive, attribute, key_func ) Sort an iterable using Python's :func: sorted . string builtin_function_or_method Convert an object to a string if it isn't already. This preserves a :class: Markup string rather than converting it back to a basic string, so it will still be marked as safe and won't be escaped again. striptags function ( value ) Strip SGML/XML tags and replace adjacent whitespace by one space. sum function ( args, kwargs, b ) Returns the sum of a sequence of numbers plus the value of parameter 'start' (which defaults to 0). When the sequence is empty it returns start. title function ( s ) Return a titlecased version of the value. I.e. words will start with uppercase letters, all remaining characters are lowercase. trim function ( value, chars ) Strip leading and trailing characters, by default whitespace. truncate function ( env, s, length, killwords, end, leeway, result ) Return a truncated copy of the string. The length is specified with the first parameter which defaults to 255 . If the second parameter is true the filter will cut the text at length. Otherwise it will discard the last word. If the text was in fact truncated it will append an ellipsis sign ( \"...\" ). If you want a different ellipsis sign than \"...\" you can specify it using the third parameter. Strings that only exceed the length by the tolerance margin given in the fourth parameter will not be truncated. unique function ( environment, value, case_sensitive, attribute, getter, seen, item, key ) Returns a list of unique items from the given iterable. upper function ( s ) Convert a value to uppercase. urlencode function ( value, items ) Quote data for use in a URL path or query using UTF-8. urlize function ( eval_ctx, value, trim_url_limit, nofollow, target, rel, extra_schemes, policies, rel_parts, scheme, rv ) Convert URLs in text into clickable links. wordcount function ( s ) Count the words in that string. wordwrap function ( environment, s, width, break_long_words, wrapstring, break_on_hyphens ) Wrap a string to the given width. Existing newlines are treated as paragraphs to be wrapped separately. xmlattr function ( eval_ctx, d, autospace, rv ) Create an SGML/XML attribute string based on the items in a dict. All values that are neither none nor undefined are automatically escaped. tojson function ( eval_ctx, value, indent, policies, dumps, kwargs ) Serialize an object to a string of JSON, and mark it safe to render in HTML. This filter is only for use in HTML documents.","title":"Builtin Jinja2 Filters"},{"location":"operations/","text":"Operations Clone the main repository to the production machine when setting up the application. All services are deployed from Docker images -- either custom images build from the two other repositories or 3rd-party images. Core services docker-compose up -d postgres docker-compose run dbt alembic upgrade head docker-compose up -d Superset See Dashboard setup for further details.","title":"Operations"},{"location":"operations/#operations","text":"Clone the main repository to the production machine when setting up the application. All services are deployed from Docker images -- either custom images build from the two other repositories or 3rd-party images.","title":"Operations"},{"location":"operations/#core-services","text":"docker-compose up -d postgres docker-compose run dbt alembic upgrade head docker-compose up -d","title":"Core services"},{"location":"operations/#superset","text":"See Dashboard setup for further details.","title":"Superset"},{"location":"recovery/","text":"Recovery Recreate a service after error or config update docker-compose up -d --no-deps --force-recreate fastapi This example recreates the fastapi service without recreating its dependant services.","title":"Recovery"},{"location":"recovery/#recovery","text":"Recreate a service after error or config update docker-compose up -d --no-deps --force-recreate fastapi This example recreates the fastapi service without recreating its dependant services.","title":"Recovery"},{"location":"services/","text":"Service Architecture Core services postgres Uses postgres:14 docker image. Environment variables Variable Value (recommended) POSTGRES_DB analytics POSTGRES_USER postgres POSTGRES_PASSWORD postgres Note These connection variables are shared with all services that need to connect to postgres (i.e. fastapi , dbt ) (see docker-compose.yml ). nginx Find the nginx.conf at nginx/nginx.conf.template in the main repository. Therein is also a nginx-ssl.conf.template for SSL setup. Either of these is mounted into the nginx container (see docker-compose.yml ). fastapi Custom image based on tiangolo/uvicorn-gunicorn-fastapi . Environment variables Variable Value Description API_KEY secures authenticated API endpoints ALLOWED_HOST * POSTGRES_HOST postgres docker maps services in internal networks to service names LOG_LEVEL info options [error, warn, info, debug ] ELASTICSEARCH_URL example: http://elastic-host:elastic-port languagetool The service runs the erikvl87/languagetool docker image. REST-API endpoints / openapi.spec are exposed / included in fastapi service. dbt Custom image based on stock python extended with the dbt data analytics framework . Optional services superset One can optionally install a dashboard service to explore and visualize analytics results. Certain visualizations are already preconfigured. See Dashboard setup for further details. The service runs the latest Apache Superset docker image. Documentation services mkdocs This project documentation can be exposed as a static website. dbt-docs dbt offers to autogenerate documentation on the SQL transformation as a static website. One option to host this site is running metaqs-dbt image with a different entrypoint and startup command: services : ... dbt-docs : image : community.docker.edu-sharing.com/metaqs-dbt:latest container_name : metaqs-dbt-docs ... volumes : - ./:/dbt entrypoint : - /bin/sh - -c command : - dbt docs generate && dbt docs serve","title":"Service Architecture"},{"location":"services/#service-architecture","text":"","title":"Service Architecture"},{"location":"services/#core-services","text":"","title":"Core services"},{"location":"services/#postgres","text":"Uses postgres:14 docker image. Environment variables Variable Value (recommended) POSTGRES_DB analytics POSTGRES_USER postgres POSTGRES_PASSWORD postgres Note These connection variables are shared with all services that need to connect to postgres (i.e. fastapi , dbt ) (see docker-compose.yml ).","title":"postgres"},{"location":"services/#nginx","text":"Find the nginx.conf at nginx/nginx.conf.template in the main repository. Therein is also a nginx-ssl.conf.template for SSL setup. Either of these is mounted into the nginx container (see docker-compose.yml ).","title":"nginx"},{"location":"services/#fastapi","text":"Custom image based on tiangolo/uvicorn-gunicorn-fastapi . Environment variables Variable Value Description API_KEY secures authenticated API endpoints ALLOWED_HOST * POSTGRES_HOST postgres docker maps services in internal networks to service names LOG_LEVEL info options [error, warn, info, debug ] ELASTICSEARCH_URL example: http://elastic-host:elastic-port","title":"fastapi"},{"location":"services/#languagetool","text":"The service runs the erikvl87/languagetool docker image. REST-API endpoints / openapi.spec are exposed / included in fastapi service.","title":"languagetool"},{"location":"services/#dbt","text":"Custom image based on stock python extended with the dbt data analytics framework .","title":"dbt"},{"location":"services/#optional-services","text":"","title":"Optional services"},{"location":"services/#superset","text":"One can optionally install a dashboard service to explore and visualize analytics results. Certain visualizations are already preconfigured. See Dashboard setup for further details. The service runs the latest Apache Superset docker image.","title":"superset"},{"location":"services/#documentation-services","text":"","title":"Documentation services"},{"location":"services/#mkdocs","text":"This project documentation can be exposed as a static website.","title":"mkdocs"},{"location":"services/#dbt-docs","text":"dbt offers to autogenerate documentation on the SQL transformation as a static website. One option to host this site is running metaqs-dbt image with a different entrypoint and startup command: services : ... dbt-docs : image : community.docker.edu-sharing.com/metaqs-dbt:latest container_name : metaqs-dbt-docs ... volumes : - ./:/dbt entrypoint : - /bin/sh - -c command : - dbt docs generate && dbt docs serve","title":"dbt-docs"},{"location":"setup/","text":"Setup Clone the main repository to the production machine when setting up the application. All services are deployed from Docker images -- either custom images build from the two other repositories or 3rd-party images. Core services Bring up the database. These commands create a fresh postgres container and run the initial migrations to set up the required database schema. docker-compose up -d postgres docker-compose run dbt alembic upgrade head Bring up remaining core services. docker-compose up -d After these steps the output from docker ps should be similar to the following: CONTAINER ID IMAGE COMMAND PORTS NAMES e4d5eb5434d1 nginx:stable-alpine \"/docker-entrypoint.\u2026\" 0 .0.0.0:80->80/tcp, :::80->80/tcp nginx 0b1fa78b9037 metaqs-fastapi \"/start-reload.sh\" 80 /tcp fastapi 13d2f71dc4b9 metaqs-dbt \"/bin/sh -c 'dbt com\u2026\" 8580 /tcp dbt 5bc6326076f4 erikvl87/languagetool \"bash start.sh\" 8010 /tcp languagetool df4f2c3472be postgres:14 \"docker-entrypoint.s\u2026\" 5432 /tcp postgres Superset See Dashboard -> Setup for further details.","title":"Setup"},{"location":"setup/#setup","text":"Clone the main repository to the production machine when setting up the application. All services are deployed from Docker images -- either custom images build from the two other repositories or 3rd-party images.","title":"Setup"},{"location":"setup/#core-services","text":"Bring up the database. These commands create a fresh postgres container and run the initial migrations to set up the required database schema. docker-compose up -d postgres docker-compose run dbt alembic upgrade head Bring up remaining core services. docker-compose up -d After these steps the output from docker ps should be similar to the following: CONTAINER ID IMAGE COMMAND PORTS NAMES e4d5eb5434d1 nginx:stable-alpine \"/docker-entrypoint.\u2026\" 0 .0.0.0:80->80/tcp, :::80->80/tcp nginx 0b1fa78b9037 metaqs-fastapi \"/start-reload.sh\" 80 /tcp fastapi 13d2f71dc4b9 metaqs-dbt \"/bin/sh -c 'dbt com\u2026\" 8580 /tcp dbt 5bc6326076f4 erikvl87/languagetool \"bash start.sh\" 8010 /tcp languagetool df4f2c3472be postgres:14 \"docker-entrypoint.s\u2026\" 5432 /tcp postgres","title":"Core services"},{"location":"setup/#superset","text":"See Dashboard -> Setup for further details.","title":"Superset"},{"location":"analytics/","text":"Analytics overview flowchart TD s1[import current state into postgres] s2[process in postgres with dbt] s3[update spellcheck queue table in postgres] s4[trigger spellcheck processing] s5[iteratively send items from spellcheck queue to languagetool container] s6[process spellcheck errors in postgres with dbt] style s4 stroke-width:2px, stroke-dasharray: 5 5 s1 --> s2 s2 --> s3 s3 -. poll finished .-> s4 s4 --> s5 s5 --> s6","title":"Analytics overview"},{"location":"analytics/#analytics-overview","text":"flowchart TD s1[import current state into postgres] s2[process in postgres with dbt] s3[update spellcheck queue table in postgres] s4[trigger spellcheck processing] s5[iteratively send items from spellcheck queue to languagetool container] s6[process spellcheck errors in postgres with dbt] style s4 stroke-width:2px, stroke-dasharray: 5 5 s1 --> s2 s2 --> s3 s3 -. poll finished .-> s4 s4 --> s5 s5 --> s6","title":"Analytics overview"},{"location":"analytics/data_import/","text":"Data import and processing sequenceDiagram participant F as fastapi participant P as postgres participant R as rpc-dbt participant E as elastic autonumber note left of F: POST /run-analytics rect var(--md-footer-bg-color--dark) note over F: import into postgres F->>E: load collections E-->>F: collections F->>E: load materials E-->>F: materials F->>P: store in postgres end rect var(--md-footer-bg-color--dark) note over F: run analytics F--)R: rpc: send run analytics R->>P: runs analytics models note right of F: poll finished ... end rect var(--md-footer-bg-color--dark) note over F: store historical changes F--)R: rpc: send run snapshots R->>P: runs snapshots note right of F: poll finished ... end note left of F: call spellcheck()","title":"Data import and processing"},{"location":"analytics/data_import/#data-import-and-processing","text":"sequenceDiagram participant F as fastapi participant P as postgres participant R as rpc-dbt participant E as elastic autonumber note left of F: POST /run-analytics rect var(--md-footer-bg-color--dark) note over F: import into postgres F->>E: load collections E-->>F: collections F->>E: load materials E-->>F: materials F->>P: store in postgres end rect var(--md-footer-bg-color--dark) note over F: run analytics F--)R: rpc: send run analytics R->>P: runs analytics models note right of F: poll finished ... end rect var(--md-footer-bg-color--dark) note over F: store historical changes F--)R: rpc: send run snapshots R->>P: runs snapshots note right of F: poll finished ... end note left of F: call spellcheck()","title":"Data import and processing"},{"location":"analytics/spellcheck_processing/","text":"Spellcheck processing sequenceDiagram participant F as fastapi participant P as postgres participant R as rpc-dbt participant L as languagetool autonumber note left of F: call spellcheck() rect var(--md-footer-bg-color--dark) note over F: read from spellcheck queue F->>P: load spellcheck items P-->>F: spellcheck items end rect var(--md-footer-bg-color--dark) note over F: read from spellcheck queue loop spellcheck items F->>L: do spellcheck L-->>F: spellcheck error ? F->>P: store error end end rect var(--md-footer-bg-color--dark) note over F: run spellcheck F--)R: rpc: send run spellcheck R->>P: runs spellcheck models note right of F: poll finished ... end","title":"Spellcheck processing"},{"location":"analytics/spellcheck_processing/#spellcheck-processing","text":"sequenceDiagram participant F as fastapi participant P as postgres participant R as rpc-dbt participant L as languagetool autonumber note left of F: call spellcheck() rect var(--md-footer-bg-color--dark) note over F: read from spellcheck queue F->>P: load spellcheck items P-->>F: spellcheck items end rect var(--md-footer-bg-color--dark) note over F: read from spellcheck queue loop spellcheck items F->>L: do spellcheck L-->>F: spellcheck error ? F->>P: store error end end rect var(--md-footer-bg-color--dark) note over F: run spellcheck F--)R: rpc: send run spellcheck R->>P: runs spellcheck models note right of F: poll finished ... end","title":"Spellcheck processing"},{"location":"analytics/sql_processing/","text":"Data import and processing sequenceDiagram participant F as fastapi participant P as postgres participant R as rpc-dbt participant E as elastic autonumber note left of F: POST /run-analytics rect var(--md-footer-bg-color--dark) note over F: import into postgres F->>E: load collections E-->>F: collections F->>E: load materials E-->>F: materials F->>P: store in postgres end rect var(--md-footer-bg-color--dark) note over F: run analytics F--)R: rpc: send run analytics R->>P: runs analytics models note right of F: poll finished ... end rect var(--md-footer-bg-color--dark) note over F: store historical changes F--)R: rpc: send run snapshots R->>P: runs snapshots note right of F: poll finished ... end note left of F: call spellcheck()","title":"Data import and processing"},{"location":"analytics/sql_processing/#data-import-and-processing","text":"sequenceDiagram participant F as fastapi participant P as postgres participant R as rpc-dbt participant E as elastic autonumber note left of F: POST /run-analytics rect var(--md-footer-bg-color--dark) note over F: import into postgres F->>E: load collections E-->>F: collections F->>E: load materials E-->>F: materials F->>P: store in postgres end rect var(--md-footer-bg-color--dark) note over F: run analytics F--)R: rpc: send run analytics R->>P: runs analytics models note right of F: poll finished ... end rect var(--md-footer-bg-color--dark) note over F: store historical changes F--)R: rpc: send run snapshots R->>P: runs snapshots note right of F: poll finished ... end note left of F: call spellcheck()","title":"Data import and processing"},{"location":"fastapi/","text":"Overview Project Layout app \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 analytics \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 analytics.py \u2502 \u251c\u2500\u2500 resource_import.py \u2502 \u251c\u2500\u2500 rpc_client.py \u2502 \u251c\u2500\u2500 search_stats.py \u2502 \u2514\u2500\u2500 spellcheck.py \u251c\u2500\u2500 api \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 auth.py \u2502 \u251c\u2500\u2500 util.py \u2502 \u251c\u2500\u2500 v1 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 api.py \u2502 \u2502 \u251c\u2500\u2500 endpoints \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 analytics.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 collections.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 demo.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 languagetool.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 learning_materials.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 stats.py","title":"Overview"},{"location":"fastapi/#overview","text":"","title":"Overview"},{"location":"fastapi/#project-layout","text":"app \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 analytics \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 analytics.py \u2502 \u251c\u2500\u2500 resource_import.py \u2502 \u251c\u2500\u2500 rpc_client.py \u2502 \u251c\u2500\u2500 search_stats.py \u2502 \u2514\u2500\u2500 spellcheck.py \u251c\u2500\u2500 api \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 auth.py \u2502 \u251c\u2500\u2500 util.py \u2502 \u251c\u2500\u2500 v1 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 api.py \u2502 \u2502 \u251c\u2500\u2500 endpoints \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 analytics.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 collections.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 demo.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 languagetool.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 learning_materials.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 stats.py","title":"Project Layout"},{"location":"fastapi/background_tasks/","text":"Analytics Background Tasks Summary Background tasks run independant of each other at individual regular intervals. Background tasks run independant of the current state of the database. They can run in any order Near real-time analytics functionality hinges on three different background tasks running inside the fastapi service: data import from elastic to postgres and subsequent analytics run in the analytics service, aggregate search stats from elastic and store in postgres, read from spellcheck_queue table in postgres, submit items to spellcheck service and store spellcheck errors in postgres.","title":"Analytics Background Tasks"},{"location":"fastapi/background_tasks/#analytics-background-tasks","text":"Summary Background tasks run independant of each other at individual regular intervals. Background tasks run independant of the current state of the database. They can run in any order Near real-time analytics functionality hinges on three different background tasks running inside the fastapi service: data import from elastic to postgres and subsequent analytics run in the analytics service, aggregate search stats from elastic and store in postgres, read from spellcheck_queue table in postgres, submit items to spellcheck service and store spellcheck errors in postgres.","title":"Analytics Background Tasks"}]}